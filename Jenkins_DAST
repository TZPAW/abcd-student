pipeline {
    agent any
    options {
        skipDefaultCheckout(true)
    }
    stages {
        //stage('Code checkout from GitHub') {
        //    steps {
        //        script {
        //            cleanWs()
        //            git credentialsId: 'github-token', url: 'https://github.com/TZPAW/abcd-student', branch: 'main'
        //        }
        //    }
        //}
        //stage('Prepare') {
        //    steps {
                //sh 'mkdir -p results/'
        //    }
        //}

        stage('Semgrep') {
            steps {
                sh '''
                    echo 'Starting Semgrep Scan'
                    semgrep scan --config auto --json > semgrep_scan.json || true
                    echo 'Stop Semgrep Scan'
                    test -a semgrep_scan.json
                    defectDojoPublisher(artifact: 'semgrep_scan.json', productName: 'Juice Shop', scanType: 'Semgrep JSON Report', engagementName: 'Zwolan.Tomasz@polskiautobuswodorowy.pl')
                 '''
            }
        }

        stage('Fake') {
            steps {
                sh '''
                    false
                '''
            }
        }

        stage('trufflehog') {
            steps {
                sh '''
                echo 'Starting Trufflehog Scan'
                date
                                          
                
                echo 'Stop Trufflehog Scan'
                '''
                // trufflehog git file://. --branch=main --fail --force-skip-archives --json > truffle_hog.json 
                defectDojoPublisher(artifact: 'truffle_hog.json', productName: 'Juice Shop', scanType: 'Trufflehog Scan', engagementName: 'Zwolan.Tomasz@polskiautobuswodorowy.pl')
            }
       }
        stage('osv-scanner') {
            steps {
                sh '''
                    echo 'Starting OSV Scan'
                    false
                    osv-scanner scan --lockfile package-lock.json --format json --output osv-scan.json || true
                    ls -la
                    head osv-scan.json
                    echo 'Stop OSV Scan'
                ''' 
                defectDojoPublisher(artifact: 'osv-scan.json', productName: 'Juice Shop', scanType: 'OSV Scan', engagementName: 'Zwolan.Tomasz@polskiautobuswodorowy.pl')
            }
        }
        stage('DAST')  {
            steps {
                sh '''
                  docker rm -f juice-shop zap
                  docker run --name juice-shop -d --rm -p 3000:3000 bkimminich/juice-shop
                  sleep 5
                '''

                sh '''
                  docker run --name zap --add-host host.docker.internal:host-gateway\
                  -v /home/stw/abcd-student/.zap:/zap/wrk/:rw \
                  -t ghcr.io/zaproxy/zaproxy:stable \
                  /bin/bash -c "zap.sh -cmd -addonupdate; /bin/bash zap.sh -cmd -addoninstall communityScripts -addoninstall pscanrulesAlpha --addoninstall pscanrulesBeta -autorun /zap/wrk/passive.yaml" || true                  
                '''
            }
            post {
              always {
                  sh '''
                      docker cp zap:/zap/wrk/reports/zap_html_report.html ${WORKSPACE}/results/zap_html_report.html
                      docker cp zap:/zap/wrk/reports/zap_xml_report.xml ${WORKSPACE}/results/zap_xml_report.xml
                      // docker stop zap juice-shop
                      // docker rm zap
                      head /tmp/reports/zap_xml_report.xml
                      echo 'Sending reports to DefectDojo...'
                      defectDojoPublisher(artifact: 'results/zap_xml_report.xml', productName: 'Juice Shop', scanType: 'ZAP Scan', engagementName: 'Zwolan.Tomasz@polskiautobuswodorowy.pl')
                  '''
              }
            }
        }

    }
    post {
        always {
            echo 'Archiving results...'
            archiveArtifacts artifacts: 'results/**/*', fingerprint: true, allowEmptyArchive: true

            
        }
    }
}
